// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.6
// source: race.proto

package structs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A "Race" here is meant to imply what an actor is physically capable of.
//
// Natural death rates, biomes they can survive in etc.
type Race struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string             `protobuf:"bytes,1,opt,name=Id,proto3" bson:"_id" json:"Id,omitempty"`
	Etag       string             `protobuf:"bytes,2,opt,name=Etag,proto3" json:"Etag,omitempty"`
	World      string             `protobuf:"bytes,3,opt,name=World,proto3" json:"World,omitempty"`
	Labels     map[string]string  `protobuf:"bytes,4,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Attributes map[string]float64 `protobuf:"bytes,5,rep,name=Attributes,proto3" json:"Attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Type       string             `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Race) Reset() {
	*x = Race{}
	mi := &file_race_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Race) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Race) ProtoMessage() {}

func (x *Race) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Race.ProtoReflect.Descriptor instead.
func (*Race) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{0}
}

func (x *Race) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Race) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Race) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

func (x *Race) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Race) GetAttributes() map[string]float64 {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Race) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetRacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []string `protobuf:"bytes,1,rep,name=Ids,proto3" json:"Ids,omitempty"`
	World string   `protobuf:"bytes,2,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *GetRacesRequest) Reset() {
	*x = GetRacesRequest{}
	mi := &file_race_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRacesRequest) ProtoMessage() {}

func (x *GetRacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRacesRequest.ProtoReflect.Descriptor instead.
func (*GetRacesRequest) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{1}
}

func (x *GetRacesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetRacesRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type GetRacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Race `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Error *Error  `protobuf:"bytes,2,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *GetRacesResponse) Reset() {
	*x = GetRacesResponse{}
	mi := &file_race_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRacesResponse) ProtoMessage() {}

func (x *GetRacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRacesResponse.ProtoReflect.Descriptor instead.
func (*GetRacesResponse) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{2}
}

func (x *GetRacesResponse) GetData() []*Race {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRacesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SetRacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Race `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	World string  `protobuf:"bytes,2,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *SetRacesRequest) Reset() {
	*x = SetRacesRequest{}
	mi := &file_race_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRacesRequest) ProtoMessage() {}

func (x *SetRacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRacesRequest.ProtoReflect.Descriptor instead.
func (*SetRacesRequest) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{3}
}

func (x *SetRacesRequest) GetData() []*Race {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetRacesRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type SetRacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etag  string `protobuf:"bytes,1,opt,name=Etag,proto3" json:"Etag,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *SetRacesResponse) Reset() {
	*x = SetRacesResponse{}
	mi := &file_race_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRacesResponse) ProtoMessage() {}

func (x *SetRacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRacesResponse.ProtoReflect.Descriptor instead.
func (*SetRacesResponse) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{4}
}

func (x *SetRacesResponse) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *SetRacesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteRaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=Id,proto3" bson:"_id" json:"Id,omitempty"`
	World string `protobuf:"bytes,2,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *DeleteRaceRequest) Reset() {
	*x = DeleteRaceRequest{}
	mi := &file_race_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRaceRequest) ProtoMessage() {}

func (x *DeleteRaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteRaceRequest) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRaceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteRaceRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type DeleteRaceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *DeleteRaceResponse) Reset() {
	*x = DeleteRaceResponse{}
	mi := &file_race_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRaceResponse) ProtoMessage() {}

func (x *DeleteRaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteRaceResponse) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteRaceResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ListRacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  *uint64           `protobuf:"varint,1,opt,name=Limit,proto3,oneof" json:"Limit,omitempty"`
	Offset *uint64           `protobuf:"varint,2,opt,name=Offset,proto3,oneof" json:"Offset,omitempty"`
	Labels map[string]string `protobuf:"bytes,3,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	World  string            `protobuf:"bytes,4,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *ListRacesRequest) Reset() {
	*x = ListRacesRequest{}
	mi := &file_race_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesRequest) ProtoMessage() {}

func (x *ListRacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesRequest.ProtoReflect.Descriptor instead.
func (*ListRacesRequest) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{7}
}

func (x *ListRacesRequest) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListRacesRequest) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListRacesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListRacesRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type ListRacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Race `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Error *Error  `protobuf:"bytes,2,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *ListRacesResponse) Reset() {
	*x = ListRacesResponse{}
	mi := &file_race_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRacesResponse) ProtoMessage() {}

func (x *ListRacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_race_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRacesResponse.ProtoReflect.Descriptor instead.
func (*ListRacesResponse) Descriptor() ([]byte, []int) {
	return file_race_proto_rawDescGZIP(), []int{8}
}

func (x *ListRacesResponse) GetData() []*Race {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListRacesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_race_proto protoreflect.FileDescriptor

var file_race_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x02, 0x0a, 0x04, 0x52,
	0x61, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x45, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x29, 0x0a,
	0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x52, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x52,
	0x61, 0x63, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d,
	0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x5a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x61, 0x63,
	0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00,
	0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x42, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x61, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x61, 0x63, 0x65, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x53, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x52,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x45, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x74, 0x61, 0x67,
	0x12, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x39, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xe7, 0x01, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x00, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x57, 0x6f, 0x72, 0x6c, 0x64, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x5b, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x52, 0x61, 0x63, 0x65, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_race_proto_rawDescOnce sync.Once
	file_race_proto_rawDescData = file_race_proto_rawDesc
)

func file_race_proto_rawDescGZIP() []byte {
	file_race_proto_rawDescOnce.Do(func() {
		file_race_proto_rawDescData = protoimpl.X.CompressGZIP(file_race_proto_rawDescData)
	})
	return file_race_proto_rawDescData
}

var file_race_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_race_proto_goTypes = []any{
	(*Race)(nil),               // 0: Race
	(*GetRacesRequest)(nil),    // 1: GetRacesRequest
	(*GetRacesResponse)(nil),   // 2: GetRacesResponse
	(*SetRacesRequest)(nil),    // 3: SetRacesRequest
	(*SetRacesResponse)(nil),   // 4: SetRacesResponse
	(*DeleteRaceRequest)(nil),  // 5: DeleteRaceRequest
	(*DeleteRaceResponse)(nil), // 6: DeleteRaceResponse
	(*ListRacesRequest)(nil),   // 7: ListRacesRequest
	(*ListRacesResponse)(nil),  // 8: ListRacesResponse
	nil,                        // 9: Race.LabelsEntry
	nil,                        // 10: Race.AttributesEntry
	nil,                        // 11: ListRacesRequest.LabelsEntry
	(*Error)(nil),              // 12: Error
}
var file_race_proto_depIdxs = []int32{
	9,  // 0: Race.Labels:type_name -> Race.LabelsEntry
	10, // 1: Race.Attributes:type_name -> Race.AttributesEntry
	0,  // 2: GetRacesResponse.Data:type_name -> Race
	12, // 3: GetRacesResponse.Error:type_name -> Error
	0,  // 4: SetRacesRequest.Data:type_name -> Race
	12, // 5: SetRacesResponse.Error:type_name -> Error
	12, // 6: DeleteRaceResponse.Error:type_name -> Error
	11, // 7: ListRacesRequest.Labels:type_name -> ListRacesRequest.LabelsEntry
	0,  // 8: ListRacesResponse.Data:type_name -> Race
	12, // 9: ListRacesResponse.Error:type_name -> Error
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_race_proto_init() }
func file_race_proto_init() {
	if File_race_proto != nil {
		return
	}
	file_errors_proto_init()
	file_race_proto_msgTypes[2].OneofWrappers = []any{}
	file_race_proto_msgTypes[4].OneofWrappers = []any{}
	file_race_proto_msgTypes[6].OneofWrappers = []any{}
	file_race_proto_msgTypes[7].OneofWrappers = []any{}
	file_race_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_race_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_race_proto_goTypes,
		DependencyIndexes: file_race_proto_depIdxs,
		MessageInfos:      file_race_proto_msgTypes,
	}.Build()
	File_race_proto = out.File
	file_race_proto_rawDesc = nil
	file_race_proto_goTypes = nil
	file_race_proto_depIdxs = nil
}
