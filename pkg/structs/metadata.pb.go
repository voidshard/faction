// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.28.2
// source: metadata.proto

package structs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum that represents the different objects that can be referenced by Metaref
type Metakey int32

const (
	Metakey_KeyNone       Metakey = 0
	Metakey_KeyActor      Metakey = 1  // targets specific actor Val: ACTOR_ID
	Metakey_KeyPlot       Metakey = 2  // targets specific plot Val: PLOT_ID
	Metakey_KeyResearch   Metakey = 3  // targets specific research Val: RESEARCH_TOPIC
	Metakey_KeyFaction    Metakey = 4  // targets specific faction Val: FACTION_ID
	Metakey_KeyReligion   Metakey = 5  // targets specific religion Val: RELIGION_ID
	Metakey_KeyGovernment Metakey = 6  // targets specific government Val: GOVERNMENT_ID
	Metakey_KeyFamily     Metakey = 7  // targets specific family Val: FAMILY_ID
	Metakey_KeyCommodity  Metakey = 8  // targets specific commodity Val: COMMODITY_NAME
	Metakey_KeyAction     Metakey = 9  // targets specific action Val: ACTION_TYPE
	Metakey_KeyJob        Metakey = 10 // targets specific job Val: JOB_ID
	Metakey_KeyArea       Metakey = 11 // targets specific area Val: AREA_ID
	Metakey_KeyEvent      Metakey = 12 // targets specific event Val: EVENT_ID
	Metakey_KeyGoal       Metakey = 13 // targets specific goal Val: GOAL_NAME
	Metakey_KeyOpinion    Metakey = 14 // targets specific opinion Val: ?
	Metakey_KeyTrust      Metakey = 15 // targets specific trust Val: ?
	Metakey_KeyFear       Metakey = 16 // targets specific fear Val: ?
	Metakey_KeyCulture    Metakey = 17 // targets specific culture Val: CULTURE_ID
	Metakey_KeyRace       Metakey = 18 // targets specific race Val: RACE
	Metakey_KeyTick       Metakey = 19 // targets specific tick Val: TICK
	Metakey_KeyWorld      Metakey = 20 // targets specific world Val: WORLD_ID
)

// Enum value maps for Metakey.
var (
	Metakey_name = map[int32]string{
		0:  "KeyNone",
		1:  "KeyActor",
		2:  "KeyPlot",
		3:  "KeyResearch",
		4:  "KeyFaction",
		5:  "KeyReligion",
		6:  "KeyGovernment",
		7:  "KeyFamily",
		8:  "KeyCommodity",
		9:  "KeyAction",
		10: "KeyJob",
		11: "KeyArea",
		12: "KeyEvent",
		13: "KeyGoal",
		14: "KeyOpinion",
		15: "KeyTrust",
		16: "KeyFear",
		17: "KeyCulture",
		18: "KeyRace",
		19: "KeyTick",
		20: "KeyWorld",
	}
	Metakey_value = map[string]int32{
		"KeyNone":       0,
		"KeyActor":      1,
		"KeyPlot":       2,
		"KeyResearch":   3,
		"KeyFaction":    4,
		"KeyReligion":   5,
		"KeyGovernment": 6,
		"KeyFamily":     7,
		"KeyCommodity":  8,
		"KeyAction":     9,
		"KeyJob":        10,
		"KeyArea":       11,
		"KeyEvent":      12,
		"KeyGoal":       13,
		"KeyOpinion":    14,
		"KeyTrust":      15,
		"KeyFear":       16,
		"KeyCulture":    17,
		"KeyRace":       18,
		"KeyTick":       19,
		"KeyWorld":      20,
	}
)

func (x Metakey) Enum() *Metakey {
	p := new(Metakey)
	*p = x
	return p
}

func (x Metakey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metakey) Descriptor() protoreflect.EnumDescriptor {
	return file_metadata_proto_enumTypes[0].Descriptor()
}

func (Metakey) Type() protoreflect.EnumType {
	return &file_metadata_proto_enumTypes[0]
}

func (x Metakey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metakey.Descriptor instead.
func (Metakey) EnumDescriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{0}
}

// Metaref is a reference to a specific object in the world. The value depends on the key.
type Metaref struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   Metakey `protobuf:"varint,1,opt,name=Key,proto3,enum=Metakey" json:"Key,omitempty"`
	Value string  `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Extra string  `protobuf:"bytes,3,opt,name=Extra,proto3" json:"Extra,omitempty"`
}

func (x *Metaref) Reset() {
	*x = Metaref{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metaref) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metaref) ProtoMessage() {}

func (x *Metaref) ProtoReflect() protoreflect.Message {
	mi := &file_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metaref.ProtoReflect.Descriptor instead.
func (*Metaref) Descriptor() ([]byte, []int) {
	return file_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *Metaref) GetKey() Metakey {
	if x != nil {
		return x.Key
	}
	return Metakey_KeyNone
}

func (x *Metaref) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Metaref) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

var File_metadata_proto protoreflect.FileDescriptor

var file_metadata_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x51, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x61, 0x72, 0x65, 0x66, 0x12, 0x1a, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x6b,
	0x65, 0x79, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x78, 0x74, 0x72, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x2a, 0xbd, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x61, 0x6b, 0x65, 0x79, 0x12,
	0x0b, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x65,
	0x79, 0x50, 0x6c, 0x6f, 0x74, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x46,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x6c, 0x69, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x4b, 0x65, 0x79,
	0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09,
	0x4b, 0x65, 0x79, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x4b,
	0x65, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x10, 0x08, 0x12, 0x0d, 0x0a,
	0x09, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06,
	0x4b, 0x65, 0x79, 0x4a, 0x6f, 0x62, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x41,
	0x72, 0x65, 0x61, 0x10, 0x0b, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x47, 0x6f, 0x61, 0x6c, 0x10, 0x0d,
	0x12, 0x0e, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x4f, 0x70, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x10, 0x0e,
	0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x54, 0x72, 0x75, 0x73, 0x74, 0x10, 0x0f, 0x12, 0x0b,
	0x0a, 0x07, 0x4b, 0x65, 0x79, 0x46, 0x65, 0x61, 0x72, 0x10, 0x10, 0x12, 0x0e, 0x0a, 0x0a, 0x4b,
	0x65, 0x79, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x10, 0x11, 0x12, 0x0b, 0x0a, 0x07, 0x4b,
	0x65, 0x79, 0x52, 0x61, 0x63, 0x65, 0x10, 0x12, 0x12, 0x0b, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x54,
	0x69, 0x63, 0x6b, 0x10, 0x13, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x10, 0x14, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_metadata_proto_rawDescOnce sync.Once
	file_metadata_proto_rawDescData = file_metadata_proto_rawDesc
)

func file_metadata_proto_rawDescGZIP() []byte {
	file_metadata_proto_rawDescOnce.Do(func() {
		file_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_metadata_proto_rawDescData)
	})
	return file_metadata_proto_rawDescData
}

var file_metadata_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_metadata_proto_goTypes = []interface{}{
	(Metakey)(0),    // 0: Metakey
	(*Metaref)(nil), // 1: Metaref
}
var file_metadata_proto_depIdxs = []int32{
	0, // 0: Metaref.Key:type_name -> Metakey
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_metadata_proto_init() }
func file_metadata_proto_init() {
	if File_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metaref); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metadata_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_metadata_proto_goTypes,
		DependencyIndexes: file_metadata_proto_depIdxs,
		EnumInfos:         file_metadata_proto_enumTypes,
		MessageInfos:      file_metadata_proto_msgTypes,
	}.Build()
	File_metadata_proto = out.File
	file_metadata_proto_rawDesc = nil
	file_metadata_proto_goTypes = nil
	file_metadata_proto_depIdxs = nil
}
