// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: person.proto

package structs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Person roughly outlines someone that can belong to / work for a faction.
type Person struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ethos               *Ethos `protobuf:"bytes,1,opt,name=Ethos,proto3" json:"Ethos,omitempty"` // rough outlook
	FirstName           string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName            string `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	ID                  string `protobuf:"bytes,4,opt,name=ID,proto3" json:"ID,omitempty"`
	BirthFamilyID       string `protobuf:"bytes,5,opt,name=BirthFamilyID,proto3" json:"BirthFamilyID,omitempty"` // family person was born into
	Race                string `protobuf:"bytes,6,opt,name=Race,proto3" json:"Race,omitempty"`
	Culture             string `protobuf:"bytes,7,opt,name=Culture,proto3" json:"Culture,omitempty"`
	AreaID              string `protobuf:"bytes,8,opt,name=AreaID,proto3" json:"AreaID,omitempty"` // area person lives in
	JobID               string `protobuf:"bytes,9,opt,name=JobID,proto3" json:"JobID,omitempty"`   // ie. current job id (if any)
	BirthTick           int64  `protobuf:"varint,10,opt,name=BirthTick,proto3" json:"BirthTick,omitempty"`
	DeathTick           int64  `protobuf:"varint,11,opt,name=DeathTick,proto3" json:"DeathTick,omitempty"`
	IsMale              bool   `protobuf:"varint,12,opt,name=IsMale,proto3" json:"IsMale,omitempty"`
	AdulthoodTick       int64  `protobuf:"varint,13,opt,name=AdulthoodTick,proto3" json:"AdulthoodTick,omitempty"` // tick person becomes an adult
	DeathMetaReason     string `protobuf:"bytes,14,opt,name=DeathMetaReason,proto3" json:"DeathMetaReason,omitempty"`
	DeathMetaKey        Meta   `protobuf:"varint,15,opt,name=DeathMetaKey,proto3,enum=Meta" json:"DeathMetaKey,omitempty"`
	DeathMetaVal        string `protobuf:"bytes,16,opt,name=DeathMetaVal,proto3" json:"DeathMetaVal,omitempty"`
	PreferredProfession string `protobuf:"bytes,17,opt,name=PreferredProfession,proto3" json:"PreferredProfession,omitempty"` // ie. what they want to do for a living
	PreferredFactionID  string `protobuf:"bytes,18,opt,name=PreferredFactionID,proto3" json:"PreferredFactionID,omitempty"`   // ie. who they want to work for
	// Used for blind randomisation
	Random int64 `protobuf:"varint,19,opt,name=Random,proto3" json:"Random,omitempty"`
	// NaturalDeathTick is the tick someone is slated to die of old age.
	//
	// Set on birth. (Let's call it .. "fated death"?)
	//
	// Computationally it's easier to store the tick someone is slated to die on
	// of "old age" than to randomly roll for each person down the line each tick to
	// see if they die.
	NaturalDeathTick int64 `protobuf:"varint,20,opt,name=NaturalDeathTick,proto3" json:"NaturalDeathTick,omitempty"`
}

func (x *Person) Reset() {
	*x = Person{}
	if protoimpl.UnsafeEnabled {
		mi := &file_person_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Person) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Person) ProtoMessage() {}

func (x *Person) ProtoReflect() protoreflect.Message {
	mi := &file_person_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Person.ProtoReflect.Descriptor instead.
func (*Person) Descriptor() ([]byte, []int) {
	return file_person_proto_rawDescGZIP(), []int{0}
}

func (x *Person) GetEthos() *Ethos {
	if x != nil {
		return x.Ethos
	}
	return nil
}

func (x *Person) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Person) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Person) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Person) GetBirthFamilyID() string {
	if x != nil {
		return x.BirthFamilyID
	}
	return ""
}

func (x *Person) GetRace() string {
	if x != nil {
		return x.Race
	}
	return ""
}

func (x *Person) GetCulture() string {
	if x != nil {
		return x.Culture
	}
	return ""
}

func (x *Person) GetAreaID() string {
	if x != nil {
		return x.AreaID
	}
	return ""
}

func (x *Person) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *Person) GetBirthTick() int64 {
	if x != nil {
		return x.BirthTick
	}
	return 0
}

func (x *Person) GetDeathTick() int64 {
	if x != nil {
		return x.DeathTick
	}
	return 0
}

func (x *Person) GetIsMale() bool {
	if x != nil {
		return x.IsMale
	}
	return false
}

func (x *Person) GetAdulthoodTick() int64 {
	if x != nil {
		return x.AdulthoodTick
	}
	return 0
}

func (x *Person) GetDeathMetaReason() string {
	if x != nil {
		return x.DeathMetaReason
	}
	return ""
}

func (x *Person) GetDeathMetaKey() Meta {
	if x != nil {
		return x.DeathMetaKey
	}
	return Meta_None
}

func (x *Person) GetDeathMetaVal() string {
	if x != nil {
		return x.DeathMetaVal
	}
	return ""
}

func (x *Person) GetPreferredProfession() string {
	if x != nil {
		return x.PreferredProfession
	}
	return ""
}

func (x *Person) GetPreferredFactionID() string {
	if x != nil {
		return x.PreferredFactionID
	}
	return ""
}

func (x *Person) GetRandom() int64 {
	if x != nil {
		return x.Random
	}
	return 0
}

func (x *Person) GetNaturalDeathTick() int64 {
	if x != nil {
		return x.NaturalDeathTick
	}
	return 0
}

var File_person_proto protoreflect.FileDescriptor

var file_person_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b,
	0x65, 0x74, 0x68, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x05, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x05, 0x45, 0x74, 0x68, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x74, 0x68, 0x6f, 0x73, 0x52, 0x05, 0x45, 0x74, 0x68, 0x6f, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x42, 0x69,
	0x72, 0x74, 0x68, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x42, 0x69, 0x72, 0x74, 0x68, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x52, 0x61, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x42, 0x69, 0x72, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x42, 0x69, 0x72, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65,
	0x61, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x73, 0x4d, 0x61,
	0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x4d, 0x61, 0x6c, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x68, 0x6f, 0x6f, 0x64, 0x54, 0x69, 0x63,
	0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x41, 0x64, 0x75, 0x6c, 0x74, 0x68, 0x6f,
	0x6f, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x61, 0x74, 0x68, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x44, 0x65, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x0c, 0x44, 0x65, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x4b, 0x65, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x05, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0c, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x44,
	0x65, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x44, 0x65, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x12,
	0x30, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x46, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x64, 0x46, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x4e, 0x61, 0x74,
	0x75, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x61, 0x74, 0x68, 0x54, 0x69, 0x63, 0x6b, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x4e, 0x61, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x61, 0x74,
	0x68, 0x54, 0x69, 0x63, 0x6b, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_person_proto_rawDescOnce sync.Once
	file_person_proto_rawDescData = file_person_proto_rawDesc
)

func file_person_proto_rawDescGZIP() []byte {
	file_person_proto_rawDescOnce.Do(func() {
		file_person_proto_rawDescData = protoimpl.X.CompressGZIP(file_person_proto_rawDescData)
	})
	return file_person_proto_rawDescData
}

var file_person_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_person_proto_goTypes = []interface{}{
	(*Person)(nil), // 0: Person
	(*Ethos)(nil),  // 1: Ethos
	(Meta)(0),      // 2: Meta
}
var file_person_proto_depIdxs = []int32{
	1, // 0: Person.Ethos:type_name -> Ethos
	2, // 1: Person.DeathMetaKey:type_name -> Meta
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_person_proto_init() }
func file_person_proto_init() {
	if File_person_proto != nil {
		return
	}
	file_ethos_proto_init()
	file_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_person_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Person); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_person_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_person_proto_goTypes,
		DependencyIndexes: file_person_proto_depIdxs,
		MessageInfos:      file_person_proto_msgTypes,
	}.Build()
	File_person_proto = out.File
	file_person_proto_rawDesc = nil
	file_person_proto_goTypes = nil
	file_person_proto_depIdxs = nil
}
