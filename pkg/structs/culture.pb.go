// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.6
// source: culture.proto

package structs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Culture is a moving group identity, in our case we care about their average Ethics
// and feelings about potential Goals, Actions etc.
type Culture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string             `protobuf:"bytes,1,opt,name=Id,proto3" bson:"_id" json:"Id,omitempty"`
	Etag       string             `protobuf:"bytes,2,opt,name=Etag,proto3" json:"Etag,omitempty"`
	World      string             `protobuf:"bytes,3,opt,name=World,proto3" json:"World,omitempty"`
	Labels     map[string]string  `protobuf:"bytes,4,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Attributes map[string]float64 `protobuf:"bytes,5,rep,name=Attributes,proto3" json:"Attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Type       string             `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Culture) Reset() {
	*x = Culture{}
	mi := &file_culture_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Culture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Culture) ProtoMessage() {}

func (x *Culture) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Culture.ProtoReflect.Descriptor instead.
func (*Culture) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{0}
}

func (x *Culture) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Culture) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Culture) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

func (x *Culture) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Culture) GetAttributes() map[string]float64 {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *Culture) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type GetCulturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids   []string `protobuf:"bytes,1,rep,name=Ids,proto3" json:"Ids,omitempty"`
	World string   `protobuf:"bytes,2,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *GetCulturesRequest) Reset() {
	*x = GetCulturesRequest{}
	mi := &file_culture_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCulturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCulturesRequest) ProtoMessage() {}

func (x *GetCulturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCulturesRequest.ProtoReflect.Descriptor instead.
func (*GetCulturesRequest) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{1}
}

func (x *GetCulturesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetCulturesRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type GetCulturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Culture `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Error *Error     `protobuf:"bytes,2,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *GetCulturesResponse) Reset() {
	*x = GetCulturesResponse{}
	mi := &file_culture_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCulturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCulturesResponse) ProtoMessage() {}

func (x *GetCulturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCulturesResponse.ProtoReflect.Descriptor instead.
func (*GetCulturesResponse) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{2}
}

func (x *GetCulturesResponse) GetData() []*Culture {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetCulturesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SetCulturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Culture `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	World string     `protobuf:"bytes,2,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *SetCulturesRequest) Reset() {
	*x = SetCulturesRequest{}
	mi := &file_culture_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCulturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCulturesRequest) ProtoMessage() {}

func (x *SetCulturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCulturesRequest.ProtoReflect.Descriptor instead.
func (*SetCulturesRequest) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{3}
}

func (x *SetCulturesRequest) GetData() []*Culture {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetCulturesRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type SetCulturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Etag  string `protobuf:"bytes,1,opt,name=Etag,proto3" json:"Etag,omitempty"`
	Error *Error `protobuf:"bytes,2,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *SetCulturesResponse) Reset() {
	*x = SetCulturesResponse{}
	mi := &file_culture_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCulturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCulturesResponse) ProtoMessage() {}

func (x *SetCulturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCulturesResponse.ProtoReflect.Descriptor instead.
func (*SetCulturesResponse) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{4}
}

func (x *SetCulturesResponse) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *SetCulturesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteCultureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=Id,proto3" bson:"_id" json:"Id,omitempty"`
	World string `protobuf:"bytes,2,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *DeleteCultureRequest) Reset() {
	*x = DeleteCultureRequest{}
	mi := &file_culture_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCultureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCultureRequest) ProtoMessage() {}

func (x *DeleteCultureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCultureRequest.ProtoReflect.Descriptor instead.
func (*DeleteCultureRequest) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCultureRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteCultureRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type DeleteCultureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *DeleteCultureResponse) Reset() {
	*x = DeleteCultureResponse{}
	mi := &file_culture_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCultureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCultureResponse) ProtoMessage() {}

func (x *DeleteCultureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCultureResponse.ProtoReflect.Descriptor instead.
func (*DeleteCultureResponse) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCultureResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ListCulturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  *uint64           `protobuf:"varint,1,opt,name=Limit,proto3,oneof" json:"Limit,omitempty"`
	Offset *uint64           `protobuf:"varint,2,opt,name=Offset,proto3,oneof" json:"Offset,omitempty"`
	Labels map[string]string `protobuf:"bytes,3,rep,name=Labels,proto3" json:"Labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	World  string            `protobuf:"bytes,4,opt,name=World,proto3" json:"World,omitempty"`
}

func (x *ListCulturesRequest) Reset() {
	*x = ListCulturesRequest{}
	mi := &file_culture_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCulturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCulturesRequest) ProtoMessage() {}

func (x *ListCulturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCulturesRequest.ProtoReflect.Descriptor instead.
func (*ListCulturesRequest) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{7}
}

func (x *ListCulturesRequest) GetLimit() uint64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListCulturesRequest) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListCulturesRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ListCulturesRequest) GetWorld() string {
	if x != nil {
		return x.World
	}
	return ""
}

type ListCulturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []*Culture `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	Error *Error     `protobuf:"bytes,2,opt,name=Error,proto3,oneof" json:"Error,omitempty"`
}

func (x *ListCulturesResponse) Reset() {
	*x = ListCulturesResponse{}
	mi := &file_culture_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCulturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCulturesResponse) ProtoMessage() {}

func (x *ListCulturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_culture_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCulturesResponse.ProtoReflect.Descriptor instead.
func (*ListCulturesResponse) Descriptor() ([]byte, []int) {
	return file_culture_proto_rawDescGZIP(), []int{8}
}

func (x *ListCulturesResponse) GetData() []*Culture {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListCulturesResponse) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_culture_proto protoreflect.FileDescriptor

var file_culture_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02,
	0x0a, 0x07, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x74, 0x61,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x12, 0x38, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3c, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43,
	0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x48, 0x0a, 0x12, 0x53, 0x65, 0x74,
	0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x22, 0x56, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x74,
	0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x74, 0x61, 0x67, 0x12, 0x21,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x22, 0x44, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xed, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x01, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x61, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_culture_proto_rawDescOnce sync.Once
	file_culture_proto_rawDescData = file_culture_proto_rawDesc
)

func file_culture_proto_rawDescGZIP() []byte {
	file_culture_proto_rawDescOnce.Do(func() {
		file_culture_proto_rawDescData = protoimpl.X.CompressGZIP(file_culture_proto_rawDescData)
	})
	return file_culture_proto_rawDescData
}

var file_culture_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_culture_proto_goTypes = []any{
	(*Culture)(nil),               // 0: Culture
	(*GetCulturesRequest)(nil),    // 1: GetCulturesRequest
	(*GetCulturesResponse)(nil),   // 2: GetCulturesResponse
	(*SetCulturesRequest)(nil),    // 3: SetCulturesRequest
	(*SetCulturesResponse)(nil),   // 4: SetCulturesResponse
	(*DeleteCultureRequest)(nil),  // 5: DeleteCultureRequest
	(*DeleteCultureResponse)(nil), // 6: DeleteCultureResponse
	(*ListCulturesRequest)(nil),   // 7: ListCulturesRequest
	(*ListCulturesResponse)(nil),  // 8: ListCulturesResponse
	nil,                           // 9: Culture.LabelsEntry
	nil,                           // 10: Culture.AttributesEntry
	nil,                           // 11: ListCulturesRequest.LabelsEntry
	(*Error)(nil),                 // 12: Error
}
var file_culture_proto_depIdxs = []int32{
	9,  // 0: Culture.Labels:type_name -> Culture.LabelsEntry
	10, // 1: Culture.Attributes:type_name -> Culture.AttributesEntry
	0,  // 2: GetCulturesResponse.Data:type_name -> Culture
	12, // 3: GetCulturesResponse.Error:type_name -> Error
	0,  // 4: SetCulturesRequest.Data:type_name -> Culture
	12, // 5: SetCulturesResponse.Error:type_name -> Error
	12, // 6: DeleteCultureResponse.Error:type_name -> Error
	11, // 7: ListCulturesRequest.Labels:type_name -> ListCulturesRequest.LabelsEntry
	0,  // 8: ListCulturesResponse.Data:type_name -> Culture
	12, // 9: ListCulturesResponse.Error:type_name -> Error
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_culture_proto_init() }
func file_culture_proto_init() {
	if File_culture_proto != nil {
		return
	}
	file_errors_proto_init()
	file_culture_proto_msgTypes[2].OneofWrappers = []any{}
	file_culture_proto_msgTypes[4].OneofWrappers = []any{}
	file_culture_proto_msgTypes[6].OneofWrappers = []any{}
	file_culture_proto_msgTypes[7].OneofWrappers = []any{}
	file_culture_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_culture_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_culture_proto_goTypes,
		DependencyIndexes: file_culture_proto_depIdxs,
		MessageInfos:      file_culture_proto_msgTypes,
	}.Build()
	File_culture_proto = out.File
	file_culture_proto_rawDesc = nil
	file_culture_proto_goTypes = nil
	file_culture_proto_depIdxs = nil
}
