syntax = "proto3";
option go_package = "pkg/structs";

import "world.proto";
import "actor.proto";
import "action.proto";
import "faction.proto";
import "job.proto";
import "on_change.proto";
import "race.proto";
import "culture.proto";

// area.proto
// land.proto

service API {
    rpc Worlds(GetWorldsRequest) returns (GetWorldsResponse);
    rpc SetWorld(SetWorldRequest) returns (SetWorldResponse);
    rpc ListWorlds(ListWorldsRequest) returns (ListWorldsResponse);
    rpc DeleteWorld(DeleteWorldRequest) returns (DeleteWorldResponse);

    rpc Actors(GetActorsRequest) returns (GetActorsResponse);
    rpc SetActors(SetActorsRequest) returns (SetActorsResponse);
    rpc ListActors(ListActorsRequest) returns (ListActorsResponse);
    rpc DeleteActor(DeleteActorRequest) returns (DeleteActorResponse);

    rpc Actions(GetActionsRequest) returns (GetActionsResponse);
    rpc SetActions(SetActionsRequest) returns (SetActionsResponse);
    rpc DeleteAction(DeleteActionRequest) returns (DeleteActionResponse);
    rpc ListActions(ListActionsRequest) returns (ListActionsResponse);

    rpc Races(GetRacesRequest) returns (GetRacesResponse);
    rpc SetRaces(SetRacesRequest) returns (SetRacesResponse);
    rpc DeleteRace(DeleteRaceRequest) returns (DeleteRaceResponse);
    rpc ListRaces(ListRacesRequest) returns (ListRacesResponse);

    rpc Cultures(GetCulturesRequest) returns (GetCulturesResponse);
    rpc SetCultures(SetCulturesRequest) returns (SetCulturesResponse);
    rpc DeleteCulture(DeleteCultureRequest) returns (DeleteCultureResponse);
    rpc ListCultures(ListCulturesRequest) returns (ListCulturesResponse);

    rpc Factions(GetFactionsRequest) returns (GetFactionsResponse);
    rpc SetFactions(SetFactionsRequest) returns (SetFactionsResponse);
    rpc ListFactions(ListFactionsRequest) returns (ListFactionsResponse);
    rpc DeleteFaction(DeleteFactionRequest) returns (DeleteFactionResponse);

    rpc Jobs(GetJobsRequest) returns (GetJobsResponse);
    rpc SetJobs(SetJobsRequest) returns (SetJobsResponse);
    rpc ListJobs(ListJobsRequest) returns (ListJobsResponse);
    rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse);

    rpc OnChange(OnChangeRequest) returns (stream OnChangeResponse);
    rpc AckStream(stream AckRequest) returns (AckResponse);

    rpc DeferChange(DeferChangeRequest) returns (DeferChangeResponse);
}
