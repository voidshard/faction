services:
  api:
    build: .
    depends_on:
      - mongo
      - rabbit
    environment:
      DEBUG: true
      DB_HOST: mongo
      DB_USERNAME: admin
      DB_PASSWORD: admin
      DB_DATABASE: faction
      Q_HOST: rabbit
      Q_USERNAME: admin
      Q_PASSWORD: admin
      OTEL_EXPORTER_OTLP_ENDPOINT: grpc://otel-collector:4317
      OTEL_RESOURCE_ATTRIBUTES: "service.name=faction-api,service.version=0.0.1"
      OTEL_LOG_LEVEL: TRACE
      OTEL_EXPORTER_OTLP_INSECURE: true
    command: api --port 5000
    ports:
      - 5000:5000
      
  rabbit: # rabbit, but with the management UI
    image: "rabbitmq:management"
    restart: on-failure
    container_name: "rabbit"
    environment:
      RABBITMQ_DEFAULT_USER: "admin"
      RABBITMQ_DEFAULT_PASS: "admin"
    ports:
      - "5672:5672"
      # docker exec rabbit rabbitmq-plugins enable rabbitmq_management
      - "15672:15672"

  mongo: # ferretdb pretends to be mongo, but runs over postgres or sqlite
    image: ghcr.io/ferretdb/ferretdb
    restart: on-failure
    container_name: "mongo"
    environment:
      FERRETDB_HANDLER: sqlite
      FERRETDB_TEST_ENABLE_NEW_AUTH: true
      FERRETDB_SETUP_USERNAME: admin
      FERRETDB_SETUP_PASSWORD: admin
      FERRETDB_SETUP_DATABASE: faction
    ports:
      - 27017:27017

  mongo-express: # mongodb ui
    image: mongo-express
    restart: on-failure
    container_name: "mongo-express"
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_AUTH_DATABASE: faction
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    ports:
      - 8081:8081

  # open telemetry: collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "1777:1777" # pprof
      - "13133:13133" # collector health listen port
      - "55679:55679" # zpages

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp" # UDP port for Jaeger agent
      - "16686:16686" # Web UI
      - "14268:14268" # HTTP port for spans

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
